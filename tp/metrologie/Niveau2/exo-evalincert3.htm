<?xml version="1.0"?>
       <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "xhtml11.dtd">
       <html xmlns="http://www.w3.org/1999/xhtml"
             xml:lang="en"><head><meta name="author" content="Created with Hot Potatoes by Half-Baked Software, registered to Vangelis."></meta><meta name="keywords" content="Hot Potatoes, Hot Potatoes, Half-Baked Software, Windows, University of Victoria"></meta>

<link rel="schema.DC" href="http://purl.org/dc/elements/1.1/" />
<meta name="DC:Creator" content="Vangelis" />
<meta name="DC:Title" content="L'&#x00E9;cart-type sur la moyenne" />


<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" /> 

<title>
L'&#x00E9;cart-type sur la moyenne
</title>

<!-- Made with executable version 6.3 Release 0 Build 5 -->

<!-- The following insertion allows you to add your own code directly to this head tag from the configuration screen -->

<link rel="stylesheet" type="text/css" href="../Zzz-Bidouillage/ext2.css" />

<link rel="stylesheet" type="text/css" href="../Zzz-Bidouillage/ext2.css" />

<script type="text/javascript">

//<![CDATA[

<!--




function Client(){
//if not a DOM browser, hopeless
	this.min = false; if (document.getElementById){this.min = true;};

	this.ua = navigator.userAgent;
	this.name = navigator.appName;
	this.ver = navigator.appVersion;  

//Get data about the browser
	this.mac = (this.ver.indexOf('Mac') != -1);
	this.win = (this.ver.indexOf('Windows') != -1);

//Look for Gecko
	this.gecko = (this.ua.indexOf('Gecko') > 1);
	if (this.gecko){
		this.geckoVer = parseInt(this.ua.substring(this.ua.indexOf('Gecko')+6, this.ua.length));
//		if (this.geckoVer < 20020000){this.min = false;}
	}
	
//Look for Firebird
	this.firebird = (this.ua.indexOf('Firebird') > 1);
	
//Look for Safari
	this.safari = (this.ua.indexOf('Safari') > 1);
	if (this.safari){
		this.gecko = false;
	}
	
//Look for IE
	this.ie = (this.ua.indexOf('MSIE') > 0);
	if (this.ie){
		this.ieVer = parseFloat(this.ua.substring(this.ua.indexOf('MSIE')+5, this.ua.length));
		if (this.ieVer < 5.5){this.min = false;}
	}
	
//Look for Opera
	this.opera = (this.ua.indexOf('Opera') > 0);
	if (this.opera){
		this.operaVer = parseFloat(this.ua.substring(this.ua.indexOf('Opera')+6, this.ua.length));
		if (this.operaVer < 7.04){this.min = false;}
	}
	if (this.min == false){
//		alert('Your browser may not be able to handle this page.');
	}
	
//Special case for the horrible ie5mac
	this.ie5mac = (this.ie&&this.mac&&(this.ieVer<6));
}

var C = new Client();

//for (prop in C){
//	alert(prop + ': ' + C[prop]);
//}



//CODE FOR HANDLING NAV BUTTONS AND FUNCTION BUTTONS

//[strNavBarJS]
function NavBtnOver(Btn){
	if (Btn.className != 'NavButtonDown'){Btn.className = 'NavButtonUp';}
}

function NavBtnOut(Btn){
	Btn.className = 'NavButton';
}

function NavBtnDown(Btn){
	Btn.className = 'NavButtonDown';
}
//[/strNavBarJS]

function FuncBtnOver(Btn){
	if (Btn.className != 'FuncButtonDown'){Btn.className = 'FuncButtonUp';}
}

function FuncBtnOut(Btn){
	Btn.className = 'FuncButton';
}

function FuncBtnDown(Btn){
	Btn.className = 'FuncButtonDown';
}

function FocusAButton(){
	if (document.getElementById('CheckButton1') != null){
		document.getElementById('CheckButton1').focus();
	}
	else{
		if (document.getElementById('CheckButton2') != null){
			document.getElementById('CheckButton2').focus();
		}
		else{
			document.getElementsByTagName('button')[0].focus();
		}
	}
}




//CODE FOR HANDLING DISPLAY OF POPUP FEEDBACK BOX

var topZ = 1000;

function ShowMessage(Feedback){
	var Output = Feedback + '<br /><br />';
	document.getElementById('FeedbackContent').innerHTML = Output;
	var FDiv = document.getElementById('FeedbackDiv');
	topZ++;
	FDiv.style.zIndex = topZ;
	FDiv.style.top = TopSettingWithScrollOffset(30) + 'px';

	FDiv.style.display = 'block';

	ShowElements(false, 'input');
	ShowElements(false, 'select');
	ShowElements(false, 'object');
	ShowElements(true, 'object', 'FeedbackContent');

//Focus the OK button
	setTimeout("document.getElementById('FeedbackOKButton').focus()", 50);
	
//
//	RefreshImages();
//
}

function ShowElements(Show, TagName, ContainerToReverse){
// added third argument to allow objects in the feedback box to appear
//IE bug -- hide all the form elements that will show through the popup
//FF on Mac bug : doesn't redisplay objects whose visibility is set to visible
//unless the object's display property is changed

	//get container object (by Id passed in, or use document otherwise)
	TopNode = document.getElementById(ContainerToReverse);
	var Els;
	if (TopNode != null) {
		Els = TopNode.getElementsByTagName(TagName);
	} else {
		Els = document.getElementsByTagName(TagName);
	}

	for (var i=0; i<Els.length; i++){
		if (TagName == "object") {
			//manipulate object elements in all browsers
			if (Show == true){
				Els[i].style.visibility = 'visible';
				//get Mac FireFox to manipulate display, to force screen redraw
				if (C.mac && C.gecko) {Els[i].style.display = '';}
			}
			else{
				Els[i].style.visibility = 'hidden';
				if (C.mac && C.gecko) {Els[i].style.display = 'none';}
			}
		} 
		else {
			// tagName is either input or select (that is, Form Elements)
			// ie6 has a problem with Form elements, so manipulate those
			if (C.ie) {
				if (C.ieVer < 7) {
					if (Show == true){
						Els[i].style.visibility = 'visible';
					}
					else{
						Els[i].style.visibility = 'hidden';
					}
				}
			}
		}
	}
}



function HideFeedback(){
	document.getElementById('FeedbackDiv').style.display = 'none';
	ShowElements(true, 'input');
	ShowElements(true, 'select');
	ShowElements(true, 'object');
	if (Finished == true){
		Finish();
	}
}


//GENERAL UTILITY FUNCTIONS AND VARIABLES

//PAGE DIMENSION FUNCTIONS
function PageDim(){
//Get the page width and height
	this.W = 600;
	this.H = 400;
	this.W = document.getElementsByTagName('body')[0].clientWidth;
	this.H = document.getElementsByTagName('body')[0].clientHeight;
}

var pg = null;

function GetPageXY(El) {
	var XY = {x: 0, y: 0};
	while(El){
		XY.x += El.offsetLeft;
		XY.y += El.offsetTop;
		El = El.offsetParent;
	}
	return XY;
}

function GetScrollTop(){
	if (typeof(window.pageYOffset) == 'number'){
		return window.pageYOffset;
	}
	else{
		if ((document.body)&&(document.body.scrollTop)){
			return document.body.scrollTop;
		}
		else{
			if ((document.documentElement)&&(document.documentElement.scrollTop)){
				return document.documentElement.scrollTop;
			}
			else{
				return 0;
			}
		}
	}
}

function GetViewportHeight(){
	if (typeof window.innerHeight != 'undefined'){
		return window.innerHeight;
	}
	else{
		if (((typeof document.documentElement != 'undefined')&&(typeof document.documentElement.clientHeight !=
     'undefined'))&&(document.documentElement.clientHeight != 0)){
			return document.documentElement.clientHeight;
		}
		else{
			return document.getElementsByTagName('body')[0].clientHeight;
		}
	}
}

function TopSettingWithScrollOffset(TopPercent){
	var T = Math.floor(GetViewportHeight() * (TopPercent/100));
	return GetScrollTop() + T; 
}

//CODE FOR AVOIDING LOSS OF DATA WHEN BACKSPACE KEY INVOKES history.back()
var InTextBox = false;

function SuppressBackspace(e){ 
	if (InTextBox == true){return;}
	if (C.ie) {
		thisKey = window.event.keyCode;
	}
	else {
		thisKey = e.keyCode;
	}

	var Suppress = false;

	if (thisKey == 8) {
		Suppress = true;
	}

	if (Suppress == true){
		if (C.ie){
			window.event.returnValue = false;	
			window.event.cancelBubble = true;
		}
		else{
			e.preventDefault();
		}
	}
}

if (C.ie){
	document.attachEvent('onkeydown',SuppressBackspace);
	window.attachEvent('onkeydown',SuppressBackspace);
}
else{
	if (window.addEventListener){
		window.addEventListener('keypress',SuppressBackspace,false);
	}
}

function ReduceItems(InArray, ReduceToSize){
	var ItemToDump=0;
	var j=0;
	while (InArray.length > ReduceToSize){
		ItemToDump = Math.floor(InArray.length*Math.random());
		InArray.splice(ItemToDump, 1);
	}
}

function Shuffle(InArray){
	var Num;
	var Temp = new Array();
	var Len = InArray.length;

	var j = Len;

	for (var i=0; i<Len; i++){
		Temp[i] = InArray[i];
	}

	for (i=0; i<Len; i++){
		Num = Math.floor(j  *  Math.random());
		InArray[i] = Temp[Num];

		for (var k=Num; k < (j-1); k++) {
			Temp[k] = Temp[k+1];
		}
		j--;
	}
	return InArray;
}

function WriteToInstructions(Feedback) {
	document.getElementById('InstructionsDiv').innerHTML = Feedback;

	RefreshImages();

}



Imgs = new Array();

function PreloadImages(){
	var a = PreloadImages.arguments;
	for (var i=0; i<a.length; i++){
		Imgs[i] = new Image();
		Imgs[i].src = a[i];
	}
}

function RefreshImages(){
	for (var i=0; i<document.images.length; i++){
		if (document.images[i].name.substring(0,6) != 'NavBar'){
			document.images[i].src = document.images[i].src;
		}
	}
}


function EscapeDoubleQuotes(InString){
	return InString.replace(/"/g, '&quot;')
}

function TrimString(InString){
        var x = 0;

        if (InString.length != 0) {
                while ((InString.charAt(InString.length - 1) == '\u0020') || (InString.charAt(InString.length - 1) == '\u000A') || (InString.charAt(InString.length - 1) == '\u000D')){
                        InString = InString.substring(0, InString.length - 1)
                }

                while ((InString.charAt(0) == '\u0020') || (InString.charAt(0) == '\u000A') || (InString.charAt(0) == '\u000D')){
                        InString = InString.substring(1, InString.length)
                }

                while (InString.indexOf('  ') != -1) {
                        x = InString.indexOf('  ')
                        InString = InString.substring(0, x) + InString.substring(x+1, InString.length)
                 }

                return InString;
        }

        else {
                return '';
        }
}

function FindLongest(InArray){
	if (InArray.length < 1){return -1;}

	var Longest = 0;
	for (var i=1; i<InArray.length; i++){
		if (InArray[i].length > InArray[Longest].length){
			Longest = i;
		}
	}
	return Longest;
}

//UNICODE CHARACTER FUNCTIONS
function IsCombiningDiacritic(CharNum){
	var Result = (((CharNum >= 0x0300)&&(CharNum <= 0x370))||((CharNum >= 0x20d0)&&(CharNum <= 0x20ff)));
	Result = Result || (((CharNum >= 0x3099)&&(CharNum <= 0x309a))||((CharNum >= 0xfe20)&&(CharNum <= 0xfe23)));
	return Result;
}

function IsCJK(CharNum){
	return ((CharNum >= 0x3000)&&(CharNum < 0xd800));
}

//SETUP FUNCTIONS
//BROWSER WILL REFILL TEXT BOXES FROM CACHE IF NOT PREVENTED
function ClearTextBoxes(){
	var NList = document.getElementsByTagName('input');
	for (var i=0; i<NList.length; i++){
		if ((NList[i].id.indexOf('Guess') > -1)||(NList[i].id.indexOf('Gap') > -1)){
			NList[i].value = '';
		}
		if (NList[i].id.indexOf('Chk') > -1){
			NList[i].checked = '';
		}
	}
}

//EXTENSION TO ARRAY OBJECT
function Array_IndexOf(Input){
	var Result = -1;
	for (var i=0; i<this.length; i++){
		if (this[i] == Input){
			Result = i;
		}
	}
	return Result;
}
Array.prototype.indexOf = Array_IndexOf;

//IE HAS RENDERING BUG WITH BOTTOM NAVBAR
function RemoveBottomNavBarForIE(){
	if ((C.ie)&&(document.getElementById('Reading') != null)){
		if (document.getElementById('BottomNavBar') != null){
			document.getElementById('TheBody').removeChild(document.getElementById('BottomNavBar'));
		}
	}
}




//HOTPOTNET-RELATED CODE

var HPNStartTime = (new Date()).getTime();
var SubmissionTimeout = 30000;
var Detail = ''; //Global that is used to submit tracking data

function Finish(){
//If there's a form, fill it out and submit it
	if (document.store != null){
		Frm = document.store;
		Frm.starttime.value = HPNStartTime;
		Frm.endtime.value = (new Date()).getTime();
		Frm.mark.value = Score;
		Frm.detail.value = Detail;
		Frm.submit();
	}
}





//JCLOZE CORE JAVASCRIPT CODE

function ItemState(){
	this.ClueGiven = false;
	this.HintsAndChecks = 0;
	this.MatchedAnswerLength = 0;
	this.ItemScore = 0;
	this.AnsweredCorrectly = false;
	this.Guesses = new Array();
	return this;
}

var Feedback = '';
var Correct = 'Bravo! Bien jou&#x00E9;.';
var Incorrect = 'Une partie de la r&#x00E9;ponse est correcte. Les erreurs ont &#x00E9;t&#x00E9; effac&#x00E9;es.'; 
var GiveHint = 'La lettre suivante a &#x00E9;t&#x00E9; ajout&#x00E9;e.';
var CaseSensitive = false;
var YourScoreIs = 'Votre score est de:';
var Finished = false;
var Locked = false;
var Score = 0;
var CurrentWord = 0;
var Guesses = '';
var TimeOver = false;

I = new Array();

I[0] = new Array();
I[0][1] = new Array();
I[0][1][0] = new Array();
I[0][1][0][0] = '\u0030\u002C\u0030\u0033\u0038';
I[0][2]='';

I[1] = new Array();
I[1][1] = new Array();
I[1][1][0] = new Array();
I[1][1][0][0] = '\u0030\u002C\u0030\u0030\u0031\u0031';
I[1][2]='';

I[2] = new Array();
I[2][1] = new Array();
I[2][1][0] = new Array();
I[2][1][0][0] = '\u0030\u002C\u0030\u0030\u0035\u0039';
I[2][2]='';

I[3] = new Array();
I[3][1] = new Array();
I[3][1][0] = new Array();
I[3][1][0][0] = '\u0030\u002C\u0030\u0032\u0037';
I[3][2]='';

I[4] = new Array();
I[4][1] = new Array();
I[4][1][0] = new Array();
I[4][1][0][0] = '\u0030\u002C\u0030\u0030\u0030\u0036\u0031';
I[4][2]='';

I[5] = new Array();
I[5][1] = new Array();
I[5][1][0] = new Array();
I[5][1][0][0] = '\u0030\u002C\u0030\u0030\u0035\u0039';
I[5][2]='';

I[6] = new Array();
I[6][1] = new Array();
I[6][1][0] = new Array();
I[6][1][0][0] = '\u0033';
I[6][2]='';

I[7] = new Array();
I[7][1] = new Array();
I[7][1][0] = new Array();
I[7][1][0][0] = '\u0032';
I[7][2]='';

I[8] = new Array();
I[8][1] = new Array();
I[8][1][0] = new Array();
I[8][1][0][0] = '\u0032';
I[8][2]='';

I[9] = new Array();
I[9][1] = new Array();
I[9][1][0] = new Array();
I[9][1][0][0] = '\u0030\u002C\u0030\u0038';
I[9][2]='';

I[10] = new Array();
I[10][1] = new Array();
I[10][1][0] = new Array();
I[10][1][0][0] = '\u0030\u002C\u0030\u0030\u0031\u0032';
I[10][2]='';

I[11] = new Array();
I[11][1] = new Array();
I[11][1][0] = new Array();
I[11][1][0][0] = '\u0030\u002C\u0030\u0031\u0032';
I[11][2]='';

I[12] = new Array();
I[12][1] = new Array();
I[12][1][0] = new Array();
I[12][1][0][0] = '\u0034\u002C\u0036\u0039';
I[12][2]='';

I[13] = new Array();
I[13][1] = new Array();
I[13][1][0] = new Array();
I[13][1][0][0] = '\u0030\u002C\u0031\u0032';
I[13][2]='';

I[14] = new Array();
I[14][1] = new Array();
I[14][1][0] = new Array();
I[14][1][0][0] = '\u002D\u0032';
I[14][2]='';


State = new Array();

function StartUp(){
	RemoveBottomNavBarForIE();
//Show a keypad if there is one	(added bugfix for 6.0.4.12)
	if (document.getElementById('CharacterKeypad') != null){
		document.getElementById('CharacterKeypad').style.display = 'block';
	}
	





	PreloadImages('Medias/incertuyrep.jpg','Medias/incertmoy.jpg','Medias/grandu.jpg','Medias/tablresum.jpg','Medias/tab1.jpg','Medias/tab2.jpg','Medias/tab3.jpg');


	var i = 0;

	State.length = 0;
	for (i=0; i<I.length; i++){
		State[i] = new ItemState();
	}
	
	ClearTextBoxes();
	


}

function ShowClue(ItemNum){
	if (Locked == true){return;}
	State[ItemNum].ClueGiven = true;
	ShowMessage(I[ItemNum][2]);
}

function SaveCurrentAnswers(){
	var Ans = '';
	for (var i=0; i<I.length; i++){
		Ans = GetGapValue(i);
		if ((Ans.length > 0)&&(Ans != State[i].Guesses[State[i].Guesses.length-1])){
			State[i].Guesses[State[i].Guesses.length] = Ans;
		}
	}
}

function CompileGuesses(){
	var F = document.getElementById('store');
	if (F != null){
		var Temp = '<?xml version="1.0"?><hpnetresult><fields>';
		var GapLabel = '';
		for (var i=0; i<State.length; i++){
			GapLabel = 'Gap ' + (i+1).toString();
			Temp += '<field><fieldname>' + GapLabel + '</fieldname>';
			Temp += '<fieldtype>student-responses</fieldtype><fieldlabel>' + GapLabel + '</fieldlabel>';
			Temp += '<fieldlabelid>JClozeStudentResponses</fieldlabelid><fielddata>';
			for (var j=0; j<State[i].Guesses.length; j++){
				if (j>0){Temp += '| ';}
				Temp += State[i].Guesses[j] + ' ';	
			}	
  		Temp += '</fielddata></field>';
		}
		Temp += '</fields></hpnetresult>';
		Detail = Temp;
	}
}

function CheckAnswers(){
	if (Locked == true){return;}
	SaveCurrentAnswers();
	var AllCorrect = true;

//Check each answer
	for (var i = 0; i<I.length; i++){

		if (State[i].AnsweredCorrectly == false){
//If it's right, calculate its score
			if (CheckAnswer(i, true) > -1){
				var TotalChars = GetGapValue(i).length;
				State[i].ItemScore = (TotalChars-State[i].HintsAndChecks)/TotalChars;
				if (State[i].ClueGiven == true){State[i].ItemScore /= 2;}
				if (State[i].ItemScore <0 ){State[i].ItemScore = 0;}
				State[i].AnsweredCorrectly = true;
//Drop the correct answer into the page, replacing the text box
				SetCorrectAnswer(i, GetGapValue(i));
			}
			else{
//Otherwise, increment the hints for this item, as a penalty
				State[i].HintsAndChecks++;

//then set the flag
				AllCorrect = false;
			}
		}
	}

//Calculate the total score
	var TotalScore = 0;
	for (i=0; i<State.length; i++){
		TotalScore += State[i].ItemScore;
	}
	TotalScore = Math.floor((TotalScore * 100)/I.length);

//Compile the output
	Output = '';

	if (AllCorrect == true){
		Output = Correct + '<br />';
	}

	Output += YourScoreIs + ' ' + TotalScore + '%.<br />';
	if (AllCorrect == false){
		Output += Incorrect;
	}
	ShowMessage(Output);
	setTimeout('WriteToInstructions(Output)', 50);
	
	Score = TotalScore;
	CompileGuesses();
	
	if ((AllCorrect == true)||(Finished == true)){
	


		TimeOver = true;
		Locked = true;
		Finished = true;
		setTimeout('Finish()', SubmissionTimeout);
	}

}

function TrackFocus(BoxNumber){
	CurrentWord = BoxNumber;
	InTextBox = true;
}

function LeaveGap(){
	InTextBox = false;
}

function CheckBeginning(Guess, Answer){
	var OutString = '';
	var i = 0;
	var UpperGuess = '';
	var UpperAnswer = '';

	if (CaseSensitive == false) {
		UpperGuess = Guess.toUpperCase();
		UpperAnswer = Answer.toUpperCase();
	}
	else {
		UpperGuess = Guess;
		UpperAnswer = Answer;
	}

	while (UpperGuess.charAt(i) == UpperAnswer.charAt(i)) {
		OutString += Guess.charAt(i);
		i++;
	}
	OutString += Answer.charAt(i);
	return OutString;
}

function GetGapValue(GNum){
	var RetVal = '';
	if ((GNum<0)||(GNum>=I.length)){return RetVal;}
	if (document.getElementById('Gap' + GNum) != null){
		RetVal = document.getElementById('Gap' + GNum).value;
		RetVal = TrimString(RetVal);
	}
	else{
		RetVal = State[GNum].Guesses[State[GNum].Guesses.length-1];
	}
	return RetVal;
}

function SetGapValue(GNum, Val){
	if ((GNum<0)||(GNum>=I.length)){return;}
	if (document.getElementById('Gap' + GNum) != null){
		document.getElementById('Gap' + GNum).value = Val;
		document.getElementById('Gap' + GNum).focus();
	}
}

function SetCorrectAnswer(GNum, Val){
	if ((GNum<0)||(GNum>=I.length)){return;}
	if (document.getElementById('GapSpan' + GNum) != null){
		document.getElementById('GapSpan' + GNum).innerHTML = Val;
	}
}

function FindCurrent() {
	var x = 0;
	FoundCurrent = -1;

//Test the current word:
//If its state is not set to already correct, check the word.
	if (State[CurrentWord].AnsweredCorrectly == false){
		if (CheckAnswer(CurrentWord, false) < 0){
			return CurrentWord;
		}
	}
	
	x=CurrentWord + 1;
	while (x<I.length){
		if (State[x].AnsweredCorrectly == false){
			if (CheckAnswer(x, false) < 0){
				return x;
			}
		}
	x++;	
	}

	x = 0;
	while (x<CurrentWord){
		if (State[x].AnsweredCorrectly == false){
			if (CheckAnswer(x, false) < 0){
				return x;
			}
		}
	x++;	
	}
	return FoundCurrent;
}

function CheckAnswer(GapNum, MarkAnswer){
	var Guess = GetGapValue(GapNum);
	var UpperGuess = '';
	var UpperAnswer = '';
	if (CaseSensitive == false){
		UpperGuess = Guess.toUpperCase();
	}
	else{
		UpperGuess = Guess;
	}
	var Match = -1;
	for (var i = 0; i<I[GapNum][1].length; i++){
		if (CaseSensitive == false){
			UpperAnswer = I[GapNum][1][i][0].toUpperCase();
		}
		else{
			UpperAnswer = I[GapNum][1][i][0];
		}
		if (TrimString(UpperGuess) == UpperAnswer){
			Match = i;
			if (MarkAnswer == true){
				State[GapNum].AnsweredCorrectly = true;
			}
		}
	}
	return Match;
}

function GetHint(GapNum){
	Guess = GetGapValue(GapNum);

	if (CheckAnswer(GapNum, false) > -1){return ''}
	RightBits = new Array();
	for (var i=0; i<I[GapNum][1].length; i++){
		RightBits[i] = CheckBeginning(Guess, I[GapNum][1][i][0]);
	}
	var RightOne = FindLongest(RightBits);
	var Result = I[GapNum][1][RightOne][0].substring(0,RightBits[RightOne].length);
//Add another char if the last one is a space
	if (Result.charAt(Result.length-1) == ' '){
		Result = I[GapNum][1][RightOne][0].substring(0,RightBits[RightOne].length+1);
	}
	return Result;
}

function ShowHint(){
	if (document.getElementById('FeedbackDiv').style.display == 'block'){return;}
	if (Locked == true){return;}
	var CurrGap = FindCurrent();
	if (CurrGap < 0){return;}

	var HintString = GetHint(CurrGap);

	if (HintString.length > 0){
		SetGapValue(CurrGap, HintString);
		State[CurrGap].HintsAndChecks += 1;
	}
	ShowMessage(GiveHint);
}

function TypeChars(Chars){
	var CurrGap = FindCurrent();
	if (CurrGap < 0){return;}
	if (document.getElementById('Gap' + CurrGap) != null){
		SetGapValue(CurrGap, document.getElementById('Gap' + CurrGap).value + Chars);
	}
}








//-->

//]]>

</script>


</head>

<body onload="StartUp()" id="TheBody" >

<!-- BeginTopNavButtons -->


<div class="NavButtonBar" id="TopNavBar">


<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)" onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="history.back(); return false;">&lt;=</button>



<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)"  onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="location='Niveau2.htm'; return false;"> Index </button>



<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)" onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="location='justesse.htm'; return false;">=&gt;</button>


</div>



<!-- EndTopNavButtons -->

<div class="Titles">
	<h2 class="ExerciseTitle">L'&#x00E9;cart-type sur la moyenne</h2>
<!-- 	
<h3 class="ExerciseSubtitle">Texte trou&#x00E9;.</h3>

 -->


</div>

<!--<div id="InstructionsDiv" class="StdDiv">
	<div id="Instructions">Compl&#x00E9;tez le texte suivant. Cliquez ensuite sur "correction". Vous pouvez utiliser "Aide" pour obtenir une lettre indice. Vous pouvez aussi cliquer sur "Indice" pour obtenir un indice. Vous perdrez des points si vous utilisez "Aide" ou "Indice"!</div>
</div> -->





<div id="MainDiv" class="StdDiv">

<!-- These top buttons hidden; reveal if required -->
<!--
<button id="CheckButton1" class="FuncButton" onmouseover="FuncBtnOver(this)" onfocus="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onblur="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckAnswers()">&nbsp;Correction&nbsp;</button>


<button class="FuncButton" onmouseover="FuncBtnOver(this)" onfocus="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onblur="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowHint()">&nbsp;Aide&nbsp;</button>


 -->
 
<div id="ClozeDiv">
<form id="Cloze" method="post" action="" onsubmit="return false;">
<div class="ClozeBody">
Lorsqu'on r&#x00E9;alise un dosage avec la m&#x00E9;thode de Sam, la concentration obtenue pour la substance X est donc ent&#x00E2;ch&#x00E9;e d'une incertitude de 0,58 mmol&sdot;L<span class="exposant">-1</span>. Mais Sam se dit que l'on peut faire mieux. Son id&#x00E9;e est la suivante : quand l'un de ses coll&#x00E8;gues mettra en oeuvre la m&#x00E9;thode, il devra r&#x00E9;aliser le dosage <b>deux fois</b>. La meilleure estimation de la concentration sera alors la moyenne des deux essais. Sam voit dans cette mani&#x00E8;re de proc&#x00E9;der l'avantage suivant : comme ici les erreurs sont al&#x00E9;atoires, elles doivent se compenser lorsqu'on r&#x00E9;alise plusieurs mesures. Les fluctuations (donc l'&#x00E9;cart-type) sur la moyenne devraient donc &#x00EA;tre moindres. <br /><br />On peut facilement v&#x00E9;rifier cela en reprenant les 10 mesures de l'&#x00E9;tude statistique de Sam. En les prenant deux &#x00E0; deux et en calculant les moyennes correspondantes, on obtient 5 valeurs. Ces 5 valeurs constituent un nouvel &#x00E9;chantillon dont on peut calculer l'&#x00E9;cart-type :<br /><br /><center><table border="1" cellpadding="10" cellspacing="0"><tbody><tr><td>Essai n&#x00B0;</td><td align="center">1</td><td align="center">2</td><td align="center">3</td><td align="center">4</td><td align="center">5</td><td align="center">6</td><td align="center">7</td><td align="center">8</td><td align="center">9</td><td align="center">10</td><td align="center">Ecart-type</td></tr><tr><td><i>c<sub>(X, labo 1)</sub></i> (en mmol&sdot;L<span class="exposant">-1</span>)</td><td align="center">10,53</td><td align="center">10,49</td><td align="center">11,00</td><td align="center">10,04</td><td align="center">10,22</td><td align="center">10,29</td><td align="center">10,68</td><td align="center">10,87</td><td align="center">10,44</td><td align="center">10,62</td><td align="center">0,29</td></tr><tr><td>Moyennes de deux mesures</td><td align="center" colspan="2">10,51</td><td align="center" colspan="2">10,52</td><td align="center" colspan="2">10,25</td><td align="center" colspan="2">10,78</td><td align="center" colspan="2">10,53</td><td align="center">0,18</td></tr></tbody></table></center><br /><br />&Ccedil;a marche ! L'&#x00E9;cart-type sur la moyenne de deux mesures est plus faible que sur une seule mesure... bien s&#x00FB;r, la m&#x00E9;thode sera un peu plus longue &#x00E0; mettre en oeuvre, mais elle sera plus fid&#x00E8;le. Supposons par exemple qu'un technicien fasse deux fois le dosage et obtienne les deux premi&#x00E8;res valeurs de Sam : <ul> <li>La meilleure estimation de la concentration de X est la moyenne des deux essais : <i><span class="avg">c</span><sub>X</sub></i>=10,51 mmol&sdot;L<span class="exposant">-1</span>.</li><li>L'incertitude pour un niveau de confiance de 95 % s'obtient en multipliant l'&#x00E9;cart-type exp&#x00E9;rimental par un facteur d'&#x00E9;largissement de 2 : <i>&Delta;c</i>=2&sdot;<i>s</i>=0,36 mmol&sdot;L<span class="exposant">-1</span>.</li></ul> <br />Voici donc comment le r&#x00E9;sultat sera exprim&#x00E9; : <br /><center><b><i>c<sub>(X, labo 1)</sub></i> = (10,51 &plusmn; 0,36) mmol&sdot;L<span class="exposant">-1</span></b></center><br /><br /><div class="important" id="imp1">L'incertitude associ&#x00E9;e &#x00E0; une moyenne de plusieurs valeurs mesur&#x00E9;es est plus faible que l'incertitude-type associ&#x00E9;e &#x00E0; une valeur mesur&#x00E9;e unique et d&#x00E9;pend du nombre p de mesures effectu&#x00E9;es le jour J. En pratique, il est courant d'effectuer deux ou trois r&#x00E9;p&#x00E9;titions du m&#x00EA;me mesurage.</div><br /><br />Incertitude-type ???<br />Comme les diff&#x00E9;rents &#x00E9;carts-types et incertitudes commencent &#x00E0; se multiplier, il est important d'adopter des notations explicites. En m&#x00E9;trologie, on utilise souvent la lettre <b>u</b> (du mot anglais "uncertainty") pour d&#x00E9;signer une incertitude. Ici, la source d'incertitude est un d&#x00E9;faut de fid&#x00E9;lit&#x00E9; de la m&#x00E9;thode. Plus pr&#x00E9;cis&#x00E9;ment, on parle de d&#x00E9;faut de <i>r&#x00E9;p&#x00E9;tabilit&#x00E9;</i> parce que cette m&#x00E9;thode est destin&#x00E9;e &#x00E0; &#x00EA;tre r&#x00E9;p&#x00E9;t&#x00E9;e par un m&#x00EA;me op&#x00E9;rateur (un ou une coll&#x00E8;gue de Sam, peu importe lequel ou laquelle), dans le m&#x00EA;me laboratoire (SkyLab), pendant un court laps de temps (nous reviendrons ult&#x00E9;rieurement sur la notion de r&#x00E9;p&#x00E9;tabilit&#x00E9;). Par ailleurs, quand on r&#x00E9;alise une &#x00E9;tude statistique pour &#x00E9;valuer la variabilit&#x00E9; due au d&#x00E9;faut de r&#x00E9;p&#x00E9;tabilit&#x00E9; - ce qu'a fait Sam avec ses 10 mesures - on ne parle pas d'&#x00E9;cart-type mais plut&#x00F4;t d'<b>incertitude-type</b>. Dans notre cas, l'incertitude-type associ&#x00E9;e &#x00E0; une seule valeur mesur&#x00E9;e <i>y</i> est : <br /><br /><img src="Medias/incertuyrep.jpg" alt="incertuyrep.jpg" title="incertuyrep" width="35%" style="display: block; margin-left: auto; margin-right: auto; text-align: center;"></img><br /><br />Pas de panique, pour l'instant nous n'avons fait que r&#x00E9;p&#x00E9;ter (avec des notations diff&#x00E9;rentes, certes) des choses d&#x00E9;j&#x00E0; vues auparavant. Compliquons (un tout petit peu) ... connaissant cette incertitude <i>u</i>(<i>y</i><sub>r&#x00E9;p&#x00E9;tabilit&#x00E9;</sub>) sur une seule mesure, peut-on pr&#x00E9;voir &#x00E0; l'avance l'incertitude <i>u</i>(<i><span class="avg">y</span></i><sub>r&#x00E9;p&#x00E9;tabilit&#x00E9;</sub>) qui ent&#x00E2;che la moyenne de p mesures ? Oui, les lois de la statistique nous permettent de calculer cette incertitude, il suffit d'appliquer la formule suivante : <br /><br /><img src="Medias/incertmoy.jpg" alt="incertmoy.jpg" title="incertmoy" width="30%" style="display: block; margin-left: auto; margin-right: auto; text-align: center;"></img><br /><br />Dans sa m&#x00E9;thode, Sam demande aux op&#x00E9;rateurs de r&#x00E9;p&#x00E9;ter 2 fois le dosage, donc p=2. En utilisant l'&#x00E9;quation ci-dessus, on obtient : <i>u</i>(<i><span class="avg">y</span></i><sub>r&#x00E9;p&#x00E9;tabilit&#x00E9;</sub>) = 0,29/&radic;2=0,21 mmol&sdot;L<span class="exposant">-1</span>. Rappelons que cet &#x00E9;cart-type avait &#x00E9;t&#x00E9; estim&#x00E9; plus haut &#x00E0; 0,18 mmol&sdot;L<span class="exposant">-1</span>, mais &#x00E0; partir d'un petit nombre de mesures ... si Sam avait op&#x00E9;r&#x00E9; avec un nombre de mesures beaucoup plus grand, il aurait obtenu l'&#x00E9;cart-type de 0,21 mmol&sdot;L<span class="exposant">-1</span>. <br /><br />Derni&#x00E8;re pr&#x00E9;cision &#x00E0; propos des notations : quand on calcule une incertitude &#x00E9;largie, on la note U (en majuscule) pour la distinguer des incertitudes-type. Il faut alors pr&#x00E9;ciser le facteur d'&#x00E9;largissement <i>k</i> et le niveau de confiance. Dans notre cas : <br /><br /><img src="Medias/grandu.jpg" alt="grandu.jpg" title="grandu" width="45%" style="display: block; margin-left: auto; margin-right: auto; text-align: center;"></img><br /><br /><div class="important" id="imp1"><center><b>Point important sur les chiffres significatifs</b><center> <br />Pour les valeurs d'incertitudes-type <i>u</i>, on recommande de toujours conserver 2 chiffres significatifs. Pour l'incertitude &#x00E9;largie <i>U</i>, on applique les r&#x00E8;gles habituelles : 2 chiffres significatifs si le premier chiffre significatif est compris entre 1 et 4 (inclus) ; 1 seul chiffre significatif si le premier chiffre significatif est compris entre 5 et 9.</div><br /><br />Un petit r&#x00E9;sum&#x00E9; ? <br /><img src="Medias/tablresum.jpg" alt="tablresum.jpg" title="tablresum" width="80%" style="display: block; margin-left: auto; margin-right: auto; text-align: center;"></img><br /><br />Nous allons maintenant montrer comment tous ces r&#x00E9;sultats peuvent &#x00EA;tre facilement obtenu &#x00E0; l'aide d'un tableur. Nous utiliserons l'exemple du logiciel LibreOffice Calc, sachant que les manipulations sont quasiment identiques avec les autres tableurs. La premi&#x00E8;re chose &#x00E0; faire est de saisir les donn&#x00E9;es dans les cellules du tableau : <br /><img src="Medias/tab1.jpg" alt="tab1.jpg" title="tab1" width="50%" style="display: block; margin-left: auto; margin-right: auto; text-align: center;"></img><br />Faites bien attention &#x00E0; utiliser le bon s&#x00E9;parateur pour l'&#x00E9;criture des valeurs. En fran&#x00E7;ais, on utilise la virgule, mais il se peut que votre tableur exige l'utilisation du point. Si la valeur est align&#x00E9;e &#x00E0; droite de la cellule, cela signifie qu'elle est correctement &#x00E9;crite.<br /><br />Pour &#x00E9;crire une formule dans une cellule, il suffit (apr&#x00E8;s avoir s&#x00E9;lectionn&#x00E9; la cellule, bien s&#x00FB;r) de commencer par le signe "=". Par exemple, pour calculer la moyenne des valeurs, il suffit d'&#x00E9;crire "=MOYENNE(" puis de s&#x00E9;lectionner la plage de cellules dont on veut calculer la moyenne. Fermez la parenth&#x00E8;se (la plage de cellule doit appara&#x00EE;tre entre parenth&#x00E8;ses) et validez par "entr&#x00E9;e". Normalement, la moyenne des mesures s'affiche. <br /><img src="Medias/tab2.jpg" alt="tab2.jpg" title="tab2" width="50%" style="display: block; margin-left: auto; margin-right: auto; text-align: center;"></img><br /><br />Pour calculer l'&#x00E9;cart-type, on proc&#x00E8;de de la m&#x00EA;me mani&#x00E8;re en utilisant la fonction ECARTYPE : on s&#x00E9;lectionne une cellule, on &#x00E9;crit "=ECARTYPE(plage de cellules)" puis on valide par "entr&#x00E9;e".<br />Pour calculer l'&#x00E9;cart-type sur la moyenne, il faut que vous utilisiez la fonction RACINE :<br /><img src="Medias/tab3.jpg" alt="tab3.jpg" title="tab3" width="50%" style="display: block; margin-left: auto; margin-right: auto; text-align: center;"></img><br /><br />Passons aux applications. Pour cela, vous aurez donc besoin d'ouvrir un tableur. Dans le tableau suivant, on pr&#x00E9;sente plusieurs m&#x00E9;thodes de dosage, &#x00E9;valu&#x00E9;es par r&#x00E9;p&#x00E9;tition de plusieurs mesures comme dans le cas de Sam. On indique le nombre d'essais devant &#x00EA;tre r&#x00E9;alis&#x00E9;s le jour J pour en calculer la moyenne, ainsi que le niveau de confiance souhait&#x00E9; pour l'expression de l'incertitude &#x00E9;largie. Vous avez &#x00E0; compl&#x00E9;ter les cellules vides de ce tableau. Attention aux chiffres significatifs !<br /><br /><table border="1" cellpadding="10" cellspacing="0" text-align="center"><tbody><tr><td width="25%">M&#x00E9;thode N&#x00B0;</td><td width="25%" align="center">1</td><td width="25%" align="center">2</td><td width="25%" align="center">3</td></tr><tr><td>Valeurs de concentration en mol&sdot;L<span class="exposant">-1</span></td><td align="center">1,1938 - 1,2906 - 1,2581 - 1,1883 - 1,2941 - 1,2221 - 1,2305 - 1,2631 - 1,2619 - 1,2779</td><td align="center">0,035146 - 0,036694 - 0,035676 - 0,035917 - 0,034009 - 0,036873</td><td align="center">0,4263 - 0,4392 - 0,4401 - 0,4315 </td></tr><tr><td>Nombre <i>p</i> d'essais &#x00E0; r&#x00E9;aliser pour la m&#x00E9;thode</td><td align="center">2</td><td align="center">3</td><td align="center">1</td></tr><tr><td>Niveau de confiance souhait&#x00E9;</td><td align="center">98,8 %</td><td align="center">95 %</td><td align="center">95 %</td></tr><tr><td>Incertitude-type associ&#x00E9;e &#x00E0; une mesure <i>u</i>(<i>c</i><sub>r&#x00E9;p&#x00E9;tabilit&#x00E9;</sub>) en mol&sdot;L<span class="exposant">-1</span></td><td align="center"><span class="GapSpan" id="GapSpan0"><input type="text" id="Gap0" onfocus="TrackFocus(0)" onblur="LeaveGap()" class="GapBox" size="6"></input></span></td><td align="center"><span class="GapSpan" id="GapSpan1"><input type="text" id="Gap1" onfocus="TrackFocus(1)" onblur="LeaveGap()" class="GapBox" size="6"></input></span></td><td align="center"><span class="GapSpan" id="GapSpan2"><input type="text" id="Gap2" onfocus="TrackFocus(2)" onblur="LeaveGap()" class="GapBox" size="6"></input></span></td></tr><tr><td>Incertitude-type associ&#x00E9;e &#x00E0; la moyenne de p mesures <i>u</i>(<i><span class="avg">c</span></i><sub>r&#x00E9;p&#x00E9;tabilit&#x00E9;</sub>) en mol&sdot;L<span class="exposant">-1</span></td><td align="center"><span class="GapSpan" id="GapSpan3"><input type="text" id="Gap3" onfocus="TrackFocus(3)" onblur="LeaveGap()" class="GapBox" size="6"></input></span></td><td align="center"><span class="GapSpan" id="GapSpan4"><input type="text" id="Gap4" onfocus="TrackFocus(4)" onblur="LeaveGap()" class="GapBox" size="7"></input></span></td><td align="center"><span class="GapSpan" id="GapSpan5"><input type="text" id="Gap5" onfocus="TrackFocus(5)" onblur="LeaveGap()" class="GapBox" size="6"></input></span></td></tr><tr><td>Facteur d'&#x00E9;largissement <i>k</i></td><td align="center"><span class="GapSpan" id="GapSpan6"><input type="text" id="Gap6" onfocus="TrackFocus(6)" onblur="LeaveGap()" class="GapBox" size="6"></input></span></td><td align="center"><span class="GapSpan" id="GapSpan7"><input type="text" id="Gap7" onfocus="TrackFocus(7)" onblur="LeaveGap()" class="GapBox" size="6"></input></span></td><td align="center"><span class="GapSpan" id="GapSpan8"><input type="text" id="Gap8" onfocus="TrackFocus(8)" onblur="LeaveGap()" class="GapBox" size="6"></input></span></td></tr><tr><td>Incertitude &#x00E9;largie <i>U</i> en mol&sdot;L<span class="exposant">-1</span></td><td align="center"><span class="GapSpan" id="GapSpan9"><input type="text" id="Gap9" onfocus="TrackFocus(9)" onblur="LeaveGap()" class="GapBox" size="6"></input></span></td><td align="center"><span class="GapSpan" id="GapSpan10"><input type="text" id="Gap10" onfocus="TrackFocus(10)" onblur="LeaveGap()" class="GapBox" size="6"></input></span></td><td align="center"><span class="GapSpan" id="GapSpan11"><input type="text" id="Gap11" onfocus="TrackFocus(11)" onblur="LeaveGap()" class="GapBox" size="6"></input></span></td></tr></tbody></table><br /><br />Un technicien r&#x00E9;alise la m&#x00E9;thode 2 et obtient les r&#x00E9;sultats suivants : <br /><br /><table border="1" cellpadding="10" cellspacing="0"><tbody><tr><td>Essai N&#x00B0;</td><td align="center">1</td><td align="center">2</td><td align="center">3</td></tr><tr><td>Valeur de concentration en mol&sdot;L<span class="exposant">-1</span></td><td align="center">0,04744</td><td align="center">0,04707</td><td align="center"> 0,04627</td></tr></tbody></table><br /><br />Exprimer le r&#x00E9;sultat avec un niveau de confiance de 95 %, en supposant que l'incertitude &#x00E9;largie reste la m&#x00EA;me que celle &#x00E9;valu&#x00E9;e pr&#x00E9;c&#x00E9;demment : <br /><center><i>c<sub></i> = (<span class="GapSpan" id="GapSpan12"><input type="text" id="Gap12" onfocus="TrackFocus(12)" onblur="LeaveGap()" class="GapBox" size="6"></input></span> &plusmn; <span class="GapSpan" id="GapSpan13"><input type="text" id="Gap13" onfocus="TrackFocus(13)" onblur="LeaveGap()" class="GapBox" size="6"></input></span>)&sdot;10<span class="exposant"><span class="GapSpan" id="GapSpan14"><input type="text" id="Gap14" onfocus="TrackFocus(14)" onblur="LeaveGap()" class="GapBox" size="6"></input></span></span> mol&sdot;L<span class="exposant">-1</span></center><br />
</div>
</form>
</div>



<button id="CheckButton2" class="FuncButton" onmouseover="FuncBtnOver(this)" onfocus="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onblur="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckAnswers()">&nbsp;Correction&nbsp;</button>


<button class="FuncButton" onmouseover="FuncBtnOver(this)" onfocus="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onblur="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowHint()">&nbsp;Aide&nbsp;</button>


</div>



<div class="Feedback" id="FeedbackDiv">
<div class="FeedbackText" id="FeedbackContent"></div>
<button id="FeedbackOKButton" class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="HideFeedback(); return false;">&nbsp;OK&nbsp;</button>
</div>

<!-- BeginBottomNavButtons -->


<div class="NavButtonBar" id="BottomNavBar">


<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)" onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="history.back(); return false;">&lt;=</button>



<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)"  onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="location='Niveau2.htm'; return false;"> Index </button>



<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)" onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="location='justesse.htm'; return false;">=&gt;</button>


</div>



<!-- EndBottomNavButtons -->

<!-- BeginSubmissionForm -->

<!-- EndSubmissionForm -->

</body>

</html>
