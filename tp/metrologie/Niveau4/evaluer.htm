<?xml version="1.0"?>
       <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "xhtml11.dtd">
       <html xmlns="http://www.w3.org/1999/xhtml"
             xml:lang="en"><head><meta name="author" content="Created with Hot Potatoes by Half-Baked Software, registered to Vangelis."></meta><meta name="keywords" content="Hot Potatoes, Hot Potatoes, Half-Baked Software, Windows, University of Victoria"></meta>

<link rel="schema.DC" href="http://purl.org/dc/elements/1.1/" />
<meta name="DC:Creator" content="Vangelis" />
<meta name="DC:Title" content="Evaluer les diff&#x00E9;rentes incertitudes" />


<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" /> 

<title>
Evaluer les diff&#x00E9;rentes incertitudes
</title>

<!-- Made with executable version 6.3 Release 0 Build 5 -->

<!-- The following insertion allows you to add your own code directly to this head tag from the configuration screen -->

<link rel="stylesheet" type="text/css" href="../Zzz-Bidouillage/ext2.css" />

<link rel="stylesheet" type="text/css" href="../Zzz-Bidouillage/ext2.css" />

<script type="text/javascript">

//<![CDATA[

<!--




function Client(){
//if not a DOM browser, hopeless
	this.min = false; if (document.getElementById){this.min = true;};

	this.ua = navigator.userAgent;
	this.name = navigator.appName;
	this.ver = navigator.appVersion;  

//Get data about the browser
	this.mac = (this.ver.indexOf('Mac') != -1);
	this.win = (this.ver.indexOf('Windows') != -1);

//Look for Gecko
	this.gecko = (this.ua.indexOf('Gecko') > 1);
	if (this.gecko){
		this.geckoVer = parseInt(this.ua.substring(this.ua.indexOf('Gecko')+6, this.ua.length));
//		if (this.geckoVer < 20020000){this.min = false;}
	}
	
//Look for Firebird
	this.firebird = (this.ua.indexOf('Firebird') > 1);
	
//Look for Safari
	this.safari = (this.ua.indexOf('Safari') > 1);
	if (this.safari){
		this.gecko = false;
	}
	
//Look for IE
	this.ie = (this.ua.indexOf('MSIE') > 0);
	if (this.ie){
		this.ieVer = parseFloat(this.ua.substring(this.ua.indexOf('MSIE')+5, this.ua.length));
		if (this.ieVer < 5.5){this.min = false;}
	}
	
//Look for Opera
	this.opera = (this.ua.indexOf('Opera') > 0);
	if (this.opera){
		this.operaVer = parseFloat(this.ua.substring(this.ua.indexOf('Opera')+6, this.ua.length));
		if (this.operaVer < 7.04){this.min = false;}
	}
	if (this.min == false){
//		alert('Your browser may not be able to handle this page.');
	}
	
//Special case for the horrible ie5mac
	this.ie5mac = (this.ie&&this.mac&&(this.ieVer<6));
}

var C = new Client();

//for (prop in C){
//	alert(prop + ': ' + C[prop]);
//}



//CODE FOR HANDLING NAV BUTTONS AND FUNCTION BUTTONS

//[strNavBarJS]
function NavBtnOver(Btn){
	if (Btn.className != 'NavButtonDown'){Btn.className = 'NavButtonUp';}
}

function NavBtnOut(Btn){
	Btn.className = 'NavButton';
}

function NavBtnDown(Btn){
	Btn.className = 'NavButtonDown';
}
//[/strNavBarJS]

function FuncBtnOver(Btn){
	if (Btn.className != 'FuncButtonDown'){Btn.className = 'FuncButtonUp';}
}

function FuncBtnOut(Btn){
	Btn.className = 'FuncButton';
}

function FuncBtnDown(Btn){
	Btn.className = 'FuncButtonDown';
}

function FocusAButton(){
	if (document.getElementById('CheckButton1') != null){
		document.getElementById('CheckButton1').focus();
	}
	else{
		if (document.getElementById('CheckButton2') != null){
			document.getElementById('CheckButton2').focus();
		}
		else{
			document.getElementsByTagName('button')[0].focus();
		}
	}
}




//CODE FOR HANDLING DISPLAY OF POPUP FEEDBACK BOX

var topZ = 1000;

function ShowMessage(Feedback){
	var Output = Feedback + '<br /><br />';
	document.getElementById('FeedbackContent').innerHTML = Output;
	var FDiv = document.getElementById('FeedbackDiv');
	topZ++;
	FDiv.style.zIndex = topZ;
	FDiv.style.top = TopSettingWithScrollOffset(30) + 'px';

	FDiv.style.display = 'block';

	ShowElements(false, 'input');
	ShowElements(false, 'select');
	ShowElements(false, 'object');
	ShowElements(true, 'object', 'FeedbackContent');

//Focus the OK button
	setTimeout("document.getElementById('FeedbackOKButton').focus()", 50);
	
//
//	RefreshImages();
//
}

function ShowElements(Show, TagName, ContainerToReverse){
// added third argument to allow objects in the feedback box to appear
//IE bug -- hide all the form elements that will show through the popup
//FF on Mac bug : doesn't redisplay objects whose visibility is set to visible
//unless the object's display property is changed

	//get container object (by Id passed in, or use document otherwise)
	TopNode = document.getElementById(ContainerToReverse);
	var Els;
	if (TopNode != null) {
		Els = TopNode.getElementsByTagName(TagName);
	} else {
		Els = document.getElementsByTagName(TagName);
	}

	for (var i=0; i<Els.length; i++){
		if (TagName == "object") {
			//manipulate object elements in all browsers
			if (Show == true){
				Els[i].style.visibility = 'visible';
				//get Mac FireFox to manipulate display, to force screen redraw
				if (C.mac && C.gecko) {Els[i].style.display = '';}
			}
			else{
				Els[i].style.visibility = 'hidden';
				if (C.mac && C.gecko) {Els[i].style.display = 'none';}
			}
		} 
		else {
			// tagName is either input or select (that is, Form Elements)
			// ie6 has a problem with Form elements, so manipulate those
			if (C.ie) {
				if (C.ieVer < 7) {
					if (Show == true){
						Els[i].style.visibility = 'visible';
					}
					else{
						Els[i].style.visibility = 'hidden';
					}
				}
			}
		}
	}
}



function HideFeedback(){
	document.getElementById('FeedbackDiv').style.display = 'none';
	ShowElements(true, 'input');
	ShowElements(true, 'select');
	ShowElements(true, 'object');
	if (Finished == true){
		Finish();
	}
}


//GENERAL UTILITY FUNCTIONS AND VARIABLES

//PAGE DIMENSION FUNCTIONS
function PageDim(){
//Get the page width and height
	this.W = 600;
	this.H = 400;
	this.W = document.getElementsByTagName('body')[0].clientWidth;
	this.H = document.getElementsByTagName('body')[0].clientHeight;
}

var pg = null;

function GetPageXY(El) {
	var XY = {x: 0, y: 0};
	while(El){
		XY.x += El.offsetLeft;
		XY.y += El.offsetTop;
		El = El.offsetParent;
	}
	return XY;
}

function GetScrollTop(){
	if (typeof(window.pageYOffset) == 'number'){
		return window.pageYOffset;
	}
	else{
		if ((document.body)&&(document.body.scrollTop)){
			return document.body.scrollTop;
		}
		else{
			if ((document.documentElement)&&(document.documentElement.scrollTop)){
				return document.documentElement.scrollTop;
			}
			else{
				return 0;
			}
		}
	}
}

function GetViewportHeight(){
	if (typeof window.innerHeight != 'undefined'){
		return window.innerHeight;
	}
	else{
		if (((typeof document.documentElement != 'undefined')&&(typeof document.documentElement.clientHeight !=
     'undefined'))&&(document.documentElement.clientHeight != 0)){
			return document.documentElement.clientHeight;
		}
		else{
			return document.getElementsByTagName('body')[0].clientHeight;
		}
	}
}

function TopSettingWithScrollOffset(TopPercent){
	var T = Math.floor(GetViewportHeight() * (TopPercent/100));
	return GetScrollTop() + T; 
}

//CODE FOR AVOIDING LOSS OF DATA WHEN BACKSPACE KEY INVOKES history.back()
var InTextBox = false;

function SuppressBackspace(e){ 
	if (InTextBox == true){return;}
	if (C.ie) {
		thisKey = window.event.keyCode;
	}
	else {
		thisKey = e.keyCode;
	}

	var Suppress = false;

	if (thisKey == 8) {
		Suppress = true;
	}

	if (Suppress == true){
		if (C.ie){
			window.event.returnValue = false;	
			window.event.cancelBubble = true;
		}
		else{
			e.preventDefault();
		}
	}
}

if (C.ie){
	document.attachEvent('onkeydown',SuppressBackspace);
	window.attachEvent('onkeydown',SuppressBackspace);
}
else{
	if (window.addEventListener){
		window.addEventListener('keypress',SuppressBackspace,false);
	}
}

function ReduceItems(InArray, ReduceToSize){
	var ItemToDump=0;
	var j=0;
	while (InArray.length > ReduceToSize){
		ItemToDump = Math.floor(InArray.length*Math.random());
		InArray.splice(ItemToDump, 1);
	}
}

function Shuffle(InArray){
	var Num;
	var Temp = new Array();
	var Len = InArray.length;

	var j = Len;

	for (var i=0; i<Len; i++){
		Temp[i] = InArray[i];
	}

	for (i=0; i<Len; i++){
		Num = Math.floor(j  *  Math.random());
		InArray[i] = Temp[Num];

		for (var k=Num; k < (j-1); k++) {
			Temp[k] = Temp[k+1];
		}
		j--;
	}
	return InArray;
}

function WriteToInstructions(Feedback) {
	document.getElementById('InstructionsDiv').innerHTML = Feedback;

	RefreshImages();

}



Imgs = new Array();

function PreloadImages(){
	var a = PreloadImages.arguments;
	for (var i=0; i<a.length; i++){
		Imgs[i] = new Image();
		Imgs[i].src = a[i];
	}
}

function RefreshImages(){
	for (var i=0; i<document.images.length; i++){
		if (document.images[i].name.substring(0,6) != 'NavBar'){
			document.images[i].src = document.images[i].src;
		}
	}
}


function EscapeDoubleQuotes(InString){
	return InString.replace(/"/g, '&quot;')
}

function TrimString(InString){
        var x = 0;

        if (InString.length != 0) {
                while ((InString.charAt(InString.length - 1) == '\u0020') || (InString.charAt(InString.length - 1) == '\u000A') || (InString.charAt(InString.length - 1) == '\u000D')){
                        InString = InString.substring(0, InString.length - 1)
                }

                while ((InString.charAt(0) == '\u0020') || (InString.charAt(0) == '\u000A') || (InString.charAt(0) == '\u000D')){
                        InString = InString.substring(1, InString.length)
                }

                while (InString.indexOf('  ') != -1) {
                        x = InString.indexOf('  ')
                        InString = InString.substring(0, x) + InString.substring(x+1, InString.length)
                 }

                return InString;
        }

        else {
                return '';
        }
}

function FindLongest(InArray){
	if (InArray.length < 1){return -1;}

	var Longest = 0;
	for (var i=1; i<InArray.length; i++){
		if (InArray[i].length > InArray[Longest].length){
			Longest = i;
		}
	}
	return Longest;
}

//UNICODE CHARACTER FUNCTIONS
function IsCombiningDiacritic(CharNum){
	var Result = (((CharNum >= 0x0300)&&(CharNum <= 0x370))||((CharNum >= 0x20d0)&&(CharNum <= 0x20ff)));
	Result = Result || (((CharNum >= 0x3099)&&(CharNum <= 0x309a))||((CharNum >= 0xfe20)&&(CharNum <= 0xfe23)));
	return Result;
}

function IsCJK(CharNum){
	return ((CharNum >= 0x3000)&&(CharNum < 0xd800));
}

//SETUP FUNCTIONS
//BROWSER WILL REFILL TEXT BOXES FROM CACHE IF NOT PREVENTED
function ClearTextBoxes(){
	var NList = document.getElementsByTagName('input');
	for (var i=0; i<NList.length; i++){
		if ((NList[i].id.indexOf('Guess') > -1)||(NList[i].id.indexOf('Gap') > -1)){
			NList[i].value = '';
		}
		if (NList[i].id.indexOf('Chk') > -1){
			NList[i].checked = '';
		}
	}
}

//EXTENSION TO ARRAY OBJECT
function Array_IndexOf(Input){
	var Result = -1;
	for (var i=0; i<this.length; i++){
		if (this[i] == Input){
			Result = i;
		}
	}
	return Result;
}
Array.prototype.indexOf = Array_IndexOf;

//IE HAS RENDERING BUG WITH BOTTOM NAVBAR
function RemoveBottomNavBarForIE(){
	if ((C.ie)&&(document.getElementById('Reading') != null)){
		if (document.getElementById('BottomNavBar') != null){
			document.getElementById('TheBody').removeChild(document.getElementById('BottomNavBar'));
		}
	}
}




//HOTPOTNET-RELATED CODE

var HPNStartTime = (new Date()).getTime();
var SubmissionTimeout = 30000;
var Detail = ''; //Global that is used to submit tracking data

function Finish(){
//If there's a form, fill it out and submit it
	if (document.store != null){
		Frm = document.store;
		Frm.starttime.value = HPNStartTime;
		Frm.endtime.value = (new Date()).getTime();
		Frm.mark.value = Score;
		Frm.detail.value = Detail;
		Frm.submit();
	}
}





//JCLOZE CORE JAVASCRIPT CODE

function ItemState(){
	this.ClueGiven = false;
	this.HintsAndChecks = 0;
	this.MatchedAnswerLength = 0;
	this.ItemScore = 0;
	this.AnsweredCorrectly = false;
	this.Guesses = new Array();
	return this;
}

var Feedback = '';
var Correct = 'Bravo! Bien jou&#x00E9;.';
var Incorrect = 'Une partie de la r&#x00E9;ponse est correcte. Les erreurs ont &#x00E9;t&#x00E9; effac&#x00E9;es.'; 
var GiveHint = 'La lettre suivante a &#x00E9;t&#x00E9; ajout&#x00E9;e.';
var CaseSensitive = false;
var YourScoreIs = 'Votre score est de:';
var Finished = false;
var Locked = false;
var Score = 0;
var CurrentWord = 0;
var Guesses = '';
var TimeOver = false;

I = new Array();

I[0] = new Array();
I[0][1] = new Array();
I[0][1][0] = new Array();
I[0][1][0][0] = '\u0030\u002C\u0030\u0032\u0039';
I[0][2]='';

I[1] = new Array();
I[1][1] = new Array();
I[1][1][0] = new Array();
I[1][1][0][0] = '\u0030\u002C\u0031\u0032';
I[1][2]='';

I[2] = new Array();
I[2][1] = new Array();
I[2][1][0] = new Array();
I[2][1][0][0] = '\u0030\u002C\u0030\u0031\u0034';
I[2][2]='';


State = new Array();

function StartUp(){
	RemoveBottomNavBarForIE();
//Show a keypad if there is one	(added bugfix for 6.0.4.12)
	if (document.getElementById('CharacterKeypad') != null){
		document.getElementById('CharacterKeypad').style.display = 'block';
	}
	





	PreloadImages('Medias/pipette5ml.jpg','Medias/loitriang.jpg','Medias/ettriang.jpg','Medias/dilat.jpg','Medias/rectang.jpg','Medias/loisdistrib.jpg');


	var i = 0;

	State.length = 0;
	for (i=0; i<I.length; i++){
		State[i] = new ItemState();
	}
	
	ClearTextBoxes();
	


}

function ShowClue(ItemNum){
	if (Locked == true){return;}
	State[ItemNum].ClueGiven = true;
	ShowMessage(I[ItemNum][2]);
}

function SaveCurrentAnswers(){
	var Ans = '';
	for (var i=0; i<I.length; i++){
		Ans = GetGapValue(i);
		if ((Ans.length > 0)&&(Ans != State[i].Guesses[State[i].Guesses.length-1])){
			State[i].Guesses[State[i].Guesses.length] = Ans;
		}
	}
}

function CompileGuesses(){
	var F = document.getElementById('store');
	if (F != null){
		var Temp = '<?xml version="1.0"?><hpnetresult><fields>';
		var GapLabel = '';
		for (var i=0; i<State.length; i++){
			GapLabel = 'Gap ' + (i+1).toString();
			Temp += '<field><fieldname>' + GapLabel + '</fieldname>';
			Temp += '<fieldtype>student-responses</fieldtype><fieldlabel>' + GapLabel + '</fieldlabel>';
			Temp += '<fieldlabelid>JClozeStudentResponses</fieldlabelid><fielddata>';
			for (var j=0; j<State[i].Guesses.length; j++){
				if (j>0){Temp += '| ';}
				Temp += State[i].Guesses[j] + ' ';	
			}	
  		Temp += '</fielddata></field>';
		}
		Temp += '</fields></hpnetresult>';
		Detail = Temp;
	}
}

function CheckAnswers(){
	if (Locked == true){return;}
	SaveCurrentAnswers();
	var AllCorrect = true;

//Check each answer
	for (var i = 0; i<I.length; i++){

		if (State[i].AnsweredCorrectly == false){
//If it's right, calculate its score
			if (CheckAnswer(i, true) > -1){
				var TotalChars = GetGapValue(i).length;
				State[i].ItemScore = (TotalChars-State[i].HintsAndChecks)/TotalChars;
				if (State[i].ClueGiven == true){State[i].ItemScore /= 2;}
				if (State[i].ItemScore <0 ){State[i].ItemScore = 0;}
				State[i].AnsweredCorrectly = true;
//Drop the correct answer into the page, replacing the text box
				SetCorrectAnswer(i, GetGapValue(i));
			}
			else{
//Otherwise, increment the hints for this item, as a penalty
				State[i].HintsAndChecks++;

//then set the flag
				AllCorrect = false;
			}
		}
	}

//Calculate the total score
	var TotalScore = 0;
	for (i=0; i<State.length; i++){
		TotalScore += State[i].ItemScore;
	}
	TotalScore = Math.floor((TotalScore * 100)/I.length);

//Compile the output
	Output = '';

	if (AllCorrect == true){
		Output = Correct + '<br />';
	}

	Output += YourScoreIs + ' ' + TotalScore + '%.<br />';
	if (AllCorrect == false){
		Output += Incorrect;
	}
	ShowMessage(Output);
	setTimeout('WriteToInstructions(Output)', 50);
	
	Score = TotalScore;
	CompileGuesses();
	
	if ((AllCorrect == true)||(Finished == true)){
	


		TimeOver = true;
		Locked = true;
		Finished = true;
		setTimeout('Finish()', SubmissionTimeout);
	}

}

function TrackFocus(BoxNumber){
	CurrentWord = BoxNumber;
	InTextBox = true;
}

function LeaveGap(){
	InTextBox = false;
}

function CheckBeginning(Guess, Answer){
	var OutString = '';
	var i = 0;
	var UpperGuess = '';
	var UpperAnswer = '';

	if (CaseSensitive == false) {
		UpperGuess = Guess.toUpperCase();
		UpperAnswer = Answer.toUpperCase();
	}
	else {
		UpperGuess = Guess;
		UpperAnswer = Answer;
	}

	while (UpperGuess.charAt(i) == UpperAnswer.charAt(i)) {
		OutString += Guess.charAt(i);
		i++;
	}
	OutString += Answer.charAt(i);
	return OutString;
}

function GetGapValue(GNum){
	var RetVal = '';
	if ((GNum<0)||(GNum>=I.length)){return RetVal;}
	if (document.getElementById('Gap' + GNum) != null){
		RetVal = document.getElementById('Gap' + GNum).value;
		RetVal = TrimString(RetVal);
	}
	else{
		RetVal = State[GNum].Guesses[State[GNum].Guesses.length-1];
	}
	return RetVal;
}

function SetGapValue(GNum, Val){
	if ((GNum<0)||(GNum>=I.length)){return;}
	if (document.getElementById('Gap' + GNum) != null){
		document.getElementById('Gap' + GNum).value = Val;
		document.getElementById('Gap' + GNum).focus();
	}
}

function SetCorrectAnswer(GNum, Val){
	if ((GNum<0)||(GNum>=I.length)){return;}
	if (document.getElementById('GapSpan' + GNum) != null){
		document.getElementById('GapSpan' + GNum).innerHTML = Val;
	}
}

function FindCurrent() {
	var x = 0;
	FoundCurrent = -1;

//Test the current word:
//If its state is not set to already correct, check the word.
	if (State[CurrentWord].AnsweredCorrectly == false){
		if (CheckAnswer(CurrentWord, false) < 0){
			return CurrentWord;
		}
	}
	
	x=CurrentWord + 1;
	while (x<I.length){
		if (State[x].AnsweredCorrectly == false){
			if (CheckAnswer(x, false) < 0){
				return x;
			}
		}
	x++;	
	}

	x = 0;
	while (x<CurrentWord){
		if (State[x].AnsweredCorrectly == false){
			if (CheckAnswer(x, false) < 0){
				return x;
			}
		}
	x++;	
	}
	return FoundCurrent;
}

function CheckAnswer(GapNum, MarkAnswer){
	var Guess = GetGapValue(GapNum);
	var UpperGuess = '';
	var UpperAnswer = '';
	if (CaseSensitive == false){
		UpperGuess = Guess.toUpperCase();
	}
	else{
		UpperGuess = Guess;
	}
	var Match = -1;
	for (var i = 0; i<I[GapNum][1].length; i++){
		if (CaseSensitive == false){
			UpperAnswer = I[GapNum][1][i][0].toUpperCase();
		}
		else{
			UpperAnswer = I[GapNum][1][i][0];
		}
		if (TrimString(UpperGuess) == UpperAnswer){
			Match = i;
			if (MarkAnswer == true){
				State[GapNum].AnsweredCorrectly = true;
			}
		}
	}
	return Match;
}

function GetHint(GapNum){
	Guess = GetGapValue(GapNum);

	if (CheckAnswer(GapNum, false) > -1){return ''}
	RightBits = new Array();
	for (var i=0; i<I[GapNum][1].length; i++){
		RightBits[i] = CheckBeginning(Guess, I[GapNum][1][i][0]);
	}
	var RightOne = FindLongest(RightBits);
	var Result = I[GapNum][1][RightOne][0].substring(0,RightBits[RightOne].length);
//Add another char if the last one is a space
	if (Result.charAt(Result.length-1) == ' '){
		Result = I[GapNum][1][RightOne][0].substring(0,RightBits[RightOne].length+1);
	}
	return Result;
}

function ShowHint(){
	if (document.getElementById('FeedbackDiv').style.display == 'block'){return;}
	if (Locked == true){return;}
	var CurrGap = FindCurrent();
	if (CurrGap < 0){return;}

	var HintString = GetHint(CurrGap);

	if (HintString.length > 0){
		SetGapValue(CurrGap, HintString);
		State[CurrGap].HintsAndChecks += 1;
	}
	ShowMessage(GiveHint);
}

function TypeChars(Chars){
	var CurrGap = FindCurrent();
	if (CurrGap < 0){return;}
	if (document.getElementById('Gap' + CurrGap) != null){
		SetGapValue(CurrGap, document.getElementById('Gap' + CurrGap).value + Chars);
	}
}








//-->

//]]>

</script>


</head>

<body onload="StartUp()" id="TheBody" >

<!-- BeginTopNavButtons -->


<div class="NavButtonBar" id="TopNavBar">


<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)" onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="history.back(); return false;">&lt;=</button>



<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)"  onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="location='Niveau4.htm'; return false;"> Index </button>



<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)" onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="location='compincert.htm'; return false;">=&gt;</button>


</div>



<!-- EndTopNavButtons -->

<div class="Titles">
	<h2 class="ExerciseTitle">Evaluer les diff&#x00E9;rentes incertitudes</h2>
<!-- 	
<h3 class="ExerciseSubtitle">Texte trou&#x00E9;.</h3>

 -->


</div>

<!--<div id="InstructionsDiv" class="StdDiv">
	<div id="Instructions">Compl&#x00E9;tez le texte suivant. Cliquez ensuite sur "correction". Vous pouvez utiliser "Aide" pour obtenir une lettre indice. Vous pouvez aussi cliquer sur "Indice" pour obtenir un indice. Vous perdrez des points si vous utilisez "Aide" ou "Indice"!</div>
</div> -->





<div id="MainDiv" class="StdDiv">

<!-- These top buttons hidden; reveal if required -->
<!--
<button id="CheckButton1" class="FuncButton" onmouseover="FuncBtnOver(this)" onfocus="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onblur="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckAnswers()">&nbsp;Correction&nbsp;</button>


<button class="FuncButton" onmouseover="FuncBtnOver(this)" onfocus="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onblur="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowHint()">&nbsp;Aide&nbsp;</button>


 -->
 
<div id="ClozeDiv">
<form id="Cloze" method="post" action="" onsubmit="return false;">
<div class="ClozeBody">
Passons &#x00E0; l'&#x00E9;tape 3 de la m&#x00E9;thode GUM. Une fois r&#x00E9;pertori&#x00E9;es les sources d'incertitude, il faut calculer les incertitudes-type correspondantes. Pour reprendre l'exemple pr&#x00E9;c&#x00E9;dent de la dilution, voici donc les incertitudes-type qu'il nous faudra calculer : <br /><br /><center><table border="1" cellpadding="1" cellspacing="0" width="70%" ><tbody><tr><td colspan="2"><b>Incertitude associ&#x00E9;e &#x00E0; la concentration de la solution m&#x00E8;re <i>c</i><sub>0</sub></b></td></tr><tr><td width="25%"><i>u</i>(<i>c</i><sub>0 ; &#x00E9;talonnage</sub>)</td><td>Incertitude due &#x00E0; l'&#x00E9;talonnage</td></tr><tr><td colspan="2"><b>Incertitude associ&#x00E9;e au volume pr&#x00E9;lev&#x00E9; &#x00E0; la pipette jaug&#x00E9;e <i>V</i><sub>0</sub></b></td></tr><tr><td><i>u</i>(<i>V</i><sub>0 ; &#x00E9;talonnage</sub>)</td><td>Incertitude due &#x00E0; l'&#x00E9;talonnage de la pipette jaug&#x00E9;e</td></tr><tr><td><i>u</i>(<i>V</i><sub>0 ; temp&#x00E9;rature</sub>)</td><td>Incertitude due &#x00E0; la temp&#x00E9;rature de la solution pr&#x00E9;lev&#x00E9;e</td></tr><tr><td><i>u</i>(<i>V</i><sub>0 ; r&#x00E9;p&#x00E9;tabilit&#x00E9;</sub>)</td><td>Incertitude due au d&#x00E9;faut de r&#x00E9;p&#x00E9;tabilit&#x00E9; de l'op&#x00E9;rateur</td></tr><tr><td colspan="2"><b>Incertitude associ&#x00E9;e au volume de la fiole jaug&#x00E9;e <i>V</i><sub>1</sub></b></td></tr><tr><td><i>u</i>(<i>V</i><sub>1 ; &#x00E9;talonnage</sub>)</td><td>Incertitude due &#x00E0; l'&#x00E9;talonnage de la fiole jaug&#x00E9;e</td></tr><tr><td><i>u</i>(<i>V</i><sub>1 ; temp&#x00E9;rature</sub>)</td><td>Incertitude due &#x00E0; la temp&#x00E9;rature de la solution plac&#x00E9;e dans la fiole</td></tr><tr><td><i>u</i>(<i>V</i><sub>1 ; r&#x00E9;p&#x00E9;tabilit&#x00E9;</sub>)</td><td>Incertitude due au d&#x00E9;faut de r&#x00E9;p&#x00E9;tabilit&#x00E9; de l'op&#x00E9;rateur</td></tr></tbody></table></center><br /><br />Cela fait donc 7 incertitudes-type &#x00E0; &#x00E9;valuer. Pour cela, on distingue deux approches :<ul><li>Evaluation de type A : il s'agit de faire une <b>analyse statistique</b> en r&#x00E9;p&#x00E9;tant une s&#x00E9;rie de mesures ou d'observations, afin de calculer l'&#x00E9;cart-type exp&#x00E9;rimental. C'est pr&#x00E9;cis&#x00E9;ment ce que nous avons illustr&#x00E9; avec l'&#x00E9;tude de Sam dans son laboratoire.</li><li>Evaluation de type B : il s'agit d'une approche <b>probabiliste</b>. On formule alors une <b>hypoth&#x00E8;se sur la loi de probabilit&#x00E9;</b> des valeurs possibles : loi normale (on conna&#x00EE;t), loi triangulaire, loi rectangulaire, ou loi d&#x00E9;riv&#x00E9;e d'arc-sinus (nous allons les d&#x00E9;couvrir ci-apr&#x00E8;s).</li></ul><div class="important" id="typeB"><center>Dans le cas pr&#x00E9;sent, toutes les incertitudes-type seront &#x00E9;valu&#x00E9;es par une approche de type B.</center></div><br /><b>Incertitude associ&#x00E9;e &#x00E0; la concentration de la solution m&#x00E8;re : <i>u</i>(<i>c</i><sub>0 ; &#x00E9;talonnage</sub>)</b><br />S'il s'agit d'une solution pr&#x00E9;par&#x00E9;e par pes&#x00E9;e et dissolution d'une substance soluble, la personne qui a pr&#x00E9;par&#x00E9; cette solution m&#x00E8;re doit vous donner l'incertitude sur la concentration. S'il s'agit d'une solution &#x00E9;talon, le fournisseur doit vous fournir un certificat d'&#x00E9;talonnage, sur lequel figure g&#x00E9;n&#x00E9;ralement l'incertitude relative. Supposons par exemple que le certificat d'&#x00E9;talonnage de la solution <i>S</i><sub>0</sub> comporte la sp&#x00E9;cification suivante : <i>c</i>(HCl)=2,000 mol&sdot;L<span class="exposant">-1</span> &plusmn; 0,1 %.<br /><br />L'&#x00E9;valuation de type B consiste &#x00E0; d&#x00E9;terminer l'incertitude-type correspondant au "&plusmn; 0,1 %" en formulant une hypoth&#x00E8;se sur la loi de probabilit&#x00E9; des valeurs possibles. Ici, le fabricant nous indique qu'il s'agit d'une loi normale et que l'incertitude relative indiqu&#x00E9;e correspond &#x00E0; un niveau de confiance de 95 %. On a donc : <br /><i>U</i>(<i>c</i><sub>0 ; &#x00E9;talonnage</sub>)=0,1&sdot;10<span class="exposant">-2</span>&sdot;<i>c</i>(HCl) [<i>Passage d'une incertitude relative &#x00E0; une incertitude absolue</i>]<br />Avec :<br /><i>U</i>(<i>c</i><sub>0 ; &#x00E9;talonnage</sub>)=2&sdot;<i>u</i>(<i>c</i><sub>0 ; &#x00E9;talonnage</sub>) [<i>Passage de l'incertitude &#x00E9;largie &#x00E0; l'incertitude-type ... c'est ici qu'intervient l'hypoth&#x00E8;se loi normale et niveau de confiance 95 %</i>]<br />Par cons&#x00E9;quent :<br />0,1&sdot;10<span class="exposant">-2</span>&sdot;<i>c</i>(HCl)=2&sdot;<i>u</i>(<i>c</i><sub>0 ; &#x00E9;talonnage</sub>)<br />Ce qui donne :<br /><i>u</i>(<i>c</i><sub>0 ; &#x00E9;talonnage</sub>)=1/2&sdot;0,1&sdot;10<span class="exposant">-2</span>&sdot;<i>c</i>(HCl)=0,0010 mol&sdot;L<span class="exposant">-1</span>.<br /><br /><b>Incertitude due &#x00E0; l'&#x00E9;talonnage de la pipette jaug&#x00E9;e <i>u</i>(<i>V</i><sub>0 ; &#x00E9;talonnage</sub>)</b><br />Cette incertitude est li&#x00E9;e &#x00E0; la tol&#x00E9;rance de la pipette jaug&#x00E9;e, notion que nous avons d&#x00E9;j&#x00E0; rencontr&#x00E9;e auparavant. Voici ce que l'on peut lire sur cette pipette : <br /><img src="Medias/pipette5ml.jpg" alt="pipette5ml.jpg" title="pipette5ml" width="10%" style="display: block; margin-left: auto; margin-right: auto; text-align: center;"></img><br /><br />La question est donc maintenant la suivante : comment passer de la tol&#x00E9;rance &#x00E0; l'incertitude-type ? C'est encore une fois une approche probabiliste (type B) qui va nous permettre d'y r&#x00E9;pondre. On est bien s&#x00FB;r tent&#x00E9; de diviser la tol&#x00E9;rance par 2 en la consid&#x00E9;rant (&#x00E0; raison) comme une incertitude &#x00E9;largie. Seulement, dans le cas d'une lecture sur une pipette jaug&#x00E9;e, les valeurs mesur&#x00E9;es ne se r&#x00E9;partissent plus selon une loi normale ! Il s'agit cette fois d'une <b>loi triangulaire</b> (pas de panique, on vous indiquera toujours la loi de probabilit&#x00E9;, vous ne pouviez pas le deviner !). Voici la courbe des fr&#x00E9;quences dans le cas d'une loi triangulaire, o&#x00F9; <i>a</i> repr&#x00E9;sente la tol&#x00E9;rance (on parle de <b>demi-&#x00E9;tendue</b>) : <br /><img src="Medias/loitriang.jpg" alt="loitriang.jpg" title="loitriang" width="50%" style="display: block; margin-left: auto; margin-right: auto; text-align: center;"></img><br /><br />L'&#x00E9;cart-type de la distribution rectangulaire est le suivant : <br /><img src="Medias/ettriang.jpg" alt="ettriang.jpg" title="ettriang" width="8%" style="display: block; margin-left: auto; margin-right: auto; text-align: center;"></img><br /><br />On en d&#x00E9;duit l'incertitude sur l'&#x00E9;talonnage de la pipette : <i>u</i>(<i>V</i><sub>0 ; &#x00E9;talonnage</sub>)=0,015/&radic;6=0,0061 mL.<br /><br /><b>Incertitude due &#x00E0; la temp&#x00E9;rature de la solution pr&#x00E9;lev&#x00E9;e <i>u</i>(<i>V</i><sub>0 ; temp&#x00E9;rature</sub>)</b><br />On voit sur l'image pr&#x00E9;c&#x00E9;dente que la pipette jaug&#x00E9;e, et toute verrerie en g&#x00E9;n&#x00E9;ral, est &#x00E9;talonn&#x00E9;e &#x00E0; 20 &#x00B0;C. Cela signifie qu'une variation de temp&#x00E9;rature par rapport &#x00E0; cette temp&#x00E9;rature de r&#x00E9;f&#x00E9;rence entra&#x00EE;ne une erreur sur le volume pr&#x00E9;lev&#x00E9;. Cette variation de volume peut-&#x00EA;tre calcul&#x00E9;e &#x00E0; partir de l'&#x00E9;quation suivante : <br /><img src="Medias/dilat.jpg" alt="dilat.jpg" title="dilat" width="15%" style="display: block; margin-left: auto; margin-right: auto; text-align: center;"></img><br />Il faut donc faire une estimation sur l'&#x00E9;cart de temp&#x00E9;rature <i>&Delta;T</i>. Certaines normes pr&#x00E9;conisent une variation de temp&#x00E9;rature de 4 &#x00B0;C, &#x00E0; moins que l'on travaille dans une salle climatis&#x00E9;e. Cela donne, pour un volume de 5 mL : <i>&Delta;V</i>=0,0042 mL. Encore une fois, cet &#x00E9;cart de temp&#x00E9;rature correspond &#x00E0; une incertitude &#x00E9;largie, dont nous devons d&#x00E9;duire l'incertitude-type. Encore une fois, on met en oeuvre l'approche de type B. Ici, on consid&#x00E8;re que la loi de distribution est rectangulaire, et la relation qui s'applique est la suivante : <br /><img src="Medias/rectang.jpg" alt="rectang.jpg" title="rectang" width="8%" style="display: block; margin-left: auto; margin-right: auto; text-align: center;"></img><br />On peut donc calculer l'incertitude-type que l'on cherche : <i>u</i>(<i>V</i><sub>0 ; temp&#x00E9;rature</sub>)=0,042/&radic;3=0,0024 mL.<br /><br /><b>Incertitude sur <i>V</i><sub>0</sub> due au d&#x00E9;faut de r&#x00E9;p&#x00E9;tabilit&#x00E9; de l'op&#x00E9;rateur <i>u</i>(<i>V</i><sub>0 ; r&#x00E9;p&#x00E9;tabilit&#x00E9;</sub>)</b><br />Il est possible pour &#x00E9;valuer cette incertitude de recourir &#x00E0; une &#x00E9;valuation de type A. On peut par exemple faire 15 pr&#x00E9;l&#x00E8;vements &#x00E0; l'aide de la pipette puis d&#x00E9;terminer l'&#x00E9;cart-type. Cependant, il est &#x00E9;galement possible de recourir &#x00E0; une &#x00E9;valuation de type B en suivant la r&#x00E8;gle suivante : on consid&#x00E8;re qu'une valeur raisonnable de la demi-&#x00E9;tendue de r&#x00E9;p&#x00E9;tabilit&#x00E9; (qui correspond &#x00E0; l'incertitude &#x00E9;largie) est la moiti&#x00E9; de la tol&#x00E9;rance, et que la loi de probabilit&#x00E9; correspondante est rectangulaire. Par cons&#x00E9;quent : <i>u</i>(<i>V</i><sub>0 ; r&#x00E9;p&#x00E9;tabilit&#x00E9;</sub>)=0,015/(2&radic;3)=0,0043 mL<br /><br /><br /><b>Incertitude due &#x00E0; l'&#x00E9;talonnage de la fiole jaug&#x00E9;e <i>u</i>(<i>V</i><sub>1 ; &#x00E9;talonnage</sub>)</b><br />La tol&#x00E9;rance indiqu&#x00E9;e par le fabricant est la suivante : <i>U</i>(<i>V</i><sub>1 ; &#x00E9;talonnage</sub>) = 0,08 mL. <br />Comme pour le volume de la pipette, on en d&#x00E9;duit l'incertitude type : <i>u</i>(<i>V</i><sub>1 ; &#x00E9;talonnage</sub>)=0,08/&radic;6=0,033 mL<br /><br /><b>Incertitude due &#x00E0; la temp&#x00E9;rature de la solution plac&#x00E9;e dans la fiole <i>u</i>(<i>V</i><sub>1 ; temp&#x00E9;rature</sub>)</b><br />Le principe est &#x00E9;galement le m&#x00EA;me que ce qui a &#x00E9;t&#x00E9; fait pour la pipette : <i>V</i><sub>1</sub>=100 mL, soit <i>&Delta;V</i><sub>1 ; temp&#x00E9;rature</sub>=0,084 mL.<br />On en d&#x00E9;duit que : <i>u</i>(<i>V</i><sub>0 ; temp&#x00E9;rature</sub>)=0,042/&radic;3=0,048 mL.<br /><br /><b>Incertitude sur <i>V</i><sub>1</sub> due au d&#x00E9;faut de r&#x00E9;p&#x00E9;tabilit&#x00E9; de l'op&#x00E9;rateur <i>u</i>(<i>V</i><sub>1 ; r&#x00E9;p&#x00E9;tabilit&#x00E9;</sub>)</b><br />On consid&#x00E8;re &#x00E0; nouveau que l'incertitude &#x00E9;largie est la moiti&#x00E9; de la tol&#x00E9;rance, et que la loi de distribution est rectangulaire : <i>u</i>(<i>V</i><sub>1 ; r&#x00E9;p&#x00E9;tabilit&#x00E9;</sub>)=0,08/(2&radic;3)=0,023 mL<br /><br />Et voil&#x00E0; ! Nous avons calcul&#x00E9; toutes les incertitudes-type. R&#x00E9;capitulons nos r&#x00E9;sultats : <br /><br /><center><table border="1" cellpadding="1" cellspacing="0" width="50%" ><tbody><tr><td colspan="2"><b>Incertitude associ&#x00E9;e &#x00E0; la concentration de la solution m&#x00E8;re <i>c</i><sub>0</sub></b></td></tr><tr><td width="25%"><i>u</i>(<i>c</i><sub>0 ; &#x00E9;talonnage</sub>)</td><td>0,0010 mol&sdot;L<span class="exposant">-1</span></td></tr><tr><td colspan="2"><b>Incertitude associ&#x00E9;e au volume pr&#x00E9;lev&#x00E9; &#x00E0; la pipette jaug&#x00E9;e <i>V</i><sub>0</sub></b></td></tr><tr><td><i>u</i>(<i>V</i><sub>0 ; &#x00E9;talonnage</sub>)</td><td>0,0061 mL</td></tr><tr><td><i>u</i>(<i>V</i><sub>0 ; temp&#x00E9;rature</sub>)</td><td>0,0024 mL</td></tr><tr><td><i>u</i>(<i>V</i><sub>0 ; r&#x00E9;p&#x00E9;tabilit&#x00E9;</sub>)</td><td>0,0043 mL</td></tr><tr><td colspan="2"><b>Incertitude associ&#x00E9;e au volume de la fiole jaug&#x00E9;e <i>V</i><sub>1</sub></b></td></tr><tr><td><i>u</i>(<i>V</i><sub>1 ; &#x00E9;talonnage</sub>)</td><td>0,033 mL</td></tr><tr><td><i>u</i>(<i>V</i><sub>1 ; temp&#x00E9;rature</sub>)</td><td>0,048 mL</td></tr><tr><td><i>u</i>(<i>V</i><sub>1 ; r&#x00E9;p&#x00E9;tabilit&#x00E9;</sub>)</td><td>0,023 mL</td></tr></tbody></table></center><br /><br />Qu'allons nous faire, maintenant, avec toutes ces incertitudes-types ? Suffit-il de les ajouter pour conna&#x00EE;re l'incertitude sur <i>c</i><sub>1</sub> ? Malheureusement, c'est un peu plus compliqu&#x00E9; ! Nous verrons dans la le&#x00E7;on suivante comment composer ces incertitudes pour finalement aboutir &#x00E0; l'incertitude sur la concentration <i>c</i><sub>1</sub>. Avant cela, nous allons faire un petit bilan des incertitudes de type B, que nous venons de d&#x00E9;couvrir, et les diff&#x00E9;rentes lois de probabilit&#x00E9;.<br /><br /><img src="Medias/loisdistrib.jpg" alt="loisdistrib.jpg" title="loisdistrib" width="80%" style="display: block; margin-left: auto; margin-right: auto; text-align: center;"></img><br /><br />Dans l'exercice qui suit, vous allez appliquer ce que nous venons de voir &#x00E0; l'exemple suivant : on souhaite peser un solide, par exemple du chlorure de sodium anhydre, &#x00E0; l'aide d'une balance de pr&#x00E9;cision. Les incertitudes-type &#x00E0; &#x00E9;valuer sont list&#x00E9;es dans le tableau ci-apr&#x00E8;s. On retrouve l'inceritude li&#x00E9;e &#x00E0; la r&#x00E9;solution de la balance, ainsi qu'au d&#x00E9;faut de r&#x00E9;p&#x00E9;tabilit&#x00E9;. On trouve &#x00E9;galement une autre source d'incertitude : le d&#x00E9;faut de lin&#x00E9;arit&#x00E9;, du au fait que la relation entre la masse pes&#x00E9;e et l'affichage de la balance n'est pas parfaitement lin&#x00E9;aire. Les autres informations relatives &#x00E0; ces sources d'incertitude vous permettront de calculer les incertitudes-type (on rappelle que l'on conserve toujours deux chiffres significatifs pour les incertitudes-type) :<br /><center><table border="0" cellpadding="2" cellspacing="2" width="70%" text-align="center"><tbody><tr><td>Source d'incertitude</td><td>Demi-&#x00E9;tendue (&plusmn; a)</td><td>Mode d'&#x00E9;valuation</td><td>Loi de probabilit&#x00E9;</td><td>Incertitude-type</td></tr><tr><td>R&#x00E9;solution de la balance</td><td>&plusmn; 0,05 mg</td><td>Type B</td><td>Rectangulaire</td><td><span class="GapSpan" id="GapSpan0"><input type="text" id="Gap0" onfocus="TrackFocus(0)" onblur="LeaveGap()" class="GapBox" size="6"></input></span> mg</td></tr><tr><td>Lin&#x00E9;arit&#x00E9; de la balance</td><td>&plusmn; 0,2 mg</td><td>Type B</td><td>Rectangulaire</td><td><span class="GapSpan" id="GapSpan1"><input type="text" id="Gap1" onfocus="TrackFocus(1)" onblur="LeaveGap()" class="GapBox" size="6"></input></span> mg</td></tr><tr><td>R&#x00E9;p&#x00E9;tabilit&#x00E9;</td><td>&plusmn; 0,025 mg</td><td>Type B</td><td>Rectangulaire</td><td><span class="GapSpan" id="GapSpan2"><input type="text" id="Gap2" onfocus="TrackFocus(2)" onblur="LeaveGap()" class="GapBox" size="6"></input></span> mg</td></tr></tbody></table></center><br />
</div>
</form>
</div>



<button id="CheckButton2" class="FuncButton" onmouseover="FuncBtnOver(this)" onfocus="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onblur="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckAnswers()">&nbsp;Correction&nbsp;</button>


<button class="FuncButton" onmouseover="FuncBtnOver(this)" onfocus="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onblur="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowHint()">&nbsp;Aide&nbsp;</button>


</div>



<div class="Feedback" id="FeedbackDiv">
<div class="FeedbackText" id="FeedbackContent"></div>
<button id="FeedbackOKButton" class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="HideFeedback(); return false;">&nbsp;OK&nbsp;</button>
</div>

<!-- BeginBottomNavButtons -->


<div class="NavButtonBar" id="BottomNavBar">


<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)" onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="history.back(); return false;">&lt;=</button>



<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)"  onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="location='Niveau4.htm'; return false;"> Index </button>



<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)" onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="location='compincert.htm'; return false;">=&gt;</button>


</div>



<!-- EndBottomNavButtons -->

<!-- BeginSubmissionForm -->

<!-- EndSubmissionForm -->

</body>

</html>
